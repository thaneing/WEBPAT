
@{
    ViewData["Title"] = "JobOrder Error Report";
    ViewData["Tab"] = "<ol class='breadcrumb'>"
   + "<li>"
   + "<a href='../../Home/Index'>Home</a>"
   + "</li>"

   + "<li class='active'>"
   + "<a>" + @ViewData["Title"] + "</a>"
   + "</li>"
   + "</ol>";
}


<style>
    th {
        font-size: 12px;
    }

    td {
        font-size: 11px;
    }
</style>

<div class="col-xs-12 col-sm-12  col-md-12 col-lg-12">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>รายละเอียด </h5>

        </div>
        <div class="ibox-content">
            <div class="table-responsive">
                <table id='example' class="table table-striped table-bordered table-hover dataTables-example">
                    <thead>
                        <tr>
                            <th align='center'>PostingDate</th>
                            <th align='center'>GR</th>
                            <th align='center'>Order</th>
                            <th align='center'>ItemNo</th>
                            <th align='center'>Des.</th>
                            <th align='center'>TotalReceive</th>
                            <th align='center'>Retention</th>
                            <th align='center'>CalRetention</th>
                            <th align='center'>User</th>

                        </tr>
                    </thead>
                  
                </table>

            </div>
        </div>
    </div>
</div>


@section Scripts {
   
    <script>
            $('#dtp1,#dtp2').datetimepicker({
                format: 'DD/MM/YYYY',
            });
     

 

                //alert(item);
                var dataType = 'application/json; charset=utf-8';
                table = $('#example').DataTable({
                    destroy: true,
                    columnDefs:
                        [

                       
                            {
                                targets: 5,
                                className: 'dt-body-right'
                            },
                            {
                                targets: 6,
                                className: 'dt-body-right'
                            },
                            {
                                targets: 7,
                                className: 'dt-body-right'
                            },
                            {
                                targets: 8,
                                className: 'dt-body-right'
                            }

                        ],


                    "language": {
                        "decimal": ",",
                        "thousands": "."
                    },
                    "order": [[2, "desc"]],
                    "pageLength": 25,

                    // rowGroup: {
                    //    dataSrc: 2
                    //},
                    //fixedHeader: true,
                    //scrollY: 600,
                    //deferRender: true,
                    //scrollCollapse: true,
                    //scroller: {
                    //    loadingIndicator: true
                    //},
                    responsive: true,

                    dom: 'Bfrtip',
                    // stateSave: true,

                    buttons: [

                        {
                            extend: 'colvis',
                            text: '<i class="fa fa-eye"></i> ซ่อน/แสดง',
                            //messageTop: "รายงาน AR&RV : " + StartDate1 + "-" + StartDate2,
                            titleAttr: 'Hide',
                            postfixButtons: ['colvisRestore']
                        },
                        {
                            extend: 'pdfHtml5',
                            text: '<i class="fa fa-file-pdf-o"></i> PDF',
                            titleAttr: 'PDF',
                            pageSize: 'A4',   // ขนาดหน้ากระดาษเป็น A4
                            //orientation: 'landscape',
                            //messageTop: "รายงาน AR&RV : " + StartDate1 + "-" + StartDate2,
                            customize: function (doc) {
                                doc.defaultStyle = {
                                    font: 'THSarabun',
                                    fontSize: '12',

                                };
                                var now = new Date();
                                var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();
                                doc['footer'] = (function (page, pages) {
                                    return {
                                        columns:
                                            [
                                                {
                                                    alignment: 'center',
                                                    text: ['Created on: ', { text: jsDate.toString() }]
                                                },
                                                {
                                                    alignment: 'right',
                                                    text: ['page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                                }
                                            ],
                                        margin: 10
                                    }
                                });
                            }
                        },
                        {
                            extend: 'excelHtml5',
                            text: '<i class="fa fa-file-excel-o"></i> Excel',
                            titleAttr: 'Excel',
                            //messageTop: "AR&RV  : " + StartDate1 + "-" + StartDate2,
                            autoFilter: true
                        },
                        {
                            extend: 'copyHtml5',
                            text: '<i class="fa fa-files-o"></i> Copy',
                            titleAttr: 'Copy'

                        },
                        {
                            text: 'JSON',
                            action: function (e, dt, button, config) {
                                var data = dt.buttons.exportData();
                                $.fn.dataTable.fileSave(
                                    new Blob([JSON.stringify(data)]),
                                    'Export.json'
                                );
                            }
                        },
                        {
                            extend: 'selectAll'
                        },
                        {
                            extend: 'selectNone'
                        }
                    ],
                    "ajax": {
                        "url": "/CheckJOError/GetData/",
                        "contentType": dataType,
                        "type": "GET",
                        "data": function (response) {
                            return JSON.stringify(response.data);
                        }

                    },

                    "columns": [


                        { "data": "PostingDate" },
                        { "data": "GR" },
                        { "data": "OrderDoc" },
                        { "data": "ItemNo" },
                        { "data": "Des1" },
                        { "data": "TotalReceive",render: $.fn.dataTable.render.number(',', '.', 2, '') },

                        { "data": "TotalRetention",render: $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "CalRetention",render: $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "UserId" }
      





                    ]
        //            ,
        //          "footerCallback": function (row, data, start, end, display) {
        //                var api = this.api(), data;
        //                // converting to interger to find total
        //                var intVal = function (i) {
        //                    return typeof i === 'string' ?
        //                        i.replace(/[\$,]/g, '') * 1 :
        //                        typeof i === 'number' ?
        //                            i : 0;
        //                };



        //                          // computing column Total the complete result
        //                var TotalAmountLCY = api
        //                    .column(9, {filter:'applied'})
        //                    .data()
        //                    .reduce(function (a, b) {
        //                        return intVal(a) + intVal(b);
        //                    }, 0);

        //                $(api.column(0).footer()).html('Total');
        //                $(api.column(9).footer()).html(  TotalAmountLCY.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,'));

        //            }




               });



        //         // #column3_search is a <input type="text"> element
        //$('#column6_search').on('keyup', function () {
        //    table
        //        .columns(6)
        //        .search(this.value)
        //        .draw();
        //});
        //// #column0_search is a <input type="text"> element
        //$('#column3_search').on('keyup', function () {
        //    table
        //        .columns(3)
        //        .search(this.value)
        //        .draw();
        //});
        //                // #column0_search is a <input type="text"> element
        //$('#column4_search').on('keyup', function () {
        //    table
        //        .columns(4)
        //        .search(this.value)
        //        .draw();
        //});

      


    </script>




}

